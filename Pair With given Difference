1. Sort the array and then use two pointer to run
if diff is lesser then we need to move our j, else we need to move our i pointer.
When we have to deal with difference this is best approach and decide whether to increase i or j.


int Solution::solve(vector<int> &A, int B) {
    sort(A.begin(), A.end());
    int i = 0, j = 0;
    while(j < A.size()  && i < A.size()){
        if(i != j && A[j] - A[i] == B) return 1;
        else if(A[j] - A[i] < B) j++;
        else i++;
    }
    return 0;
}

2. Use hashing to see whether this element exist or not.

int Solution::solve(vector<int> &A, int B) {
    unordered_map<int, int> M;
    for(int i = 0 ; i < A.size() ; i++){
        M[A[i]] = i;
    }
    for(int i = 0 ; i < A.size() ; i++){
        if(M.find(B + A[i]) != M .end() && M[B + A[i]] != i){
            return 1;
        }
    }
    return 0;
}

