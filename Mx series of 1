two pointer i and j.
i will mark the start of series and j will mark the end of the series.
now, if A[j] == 0 and then decrease 
Now if B < 0 then its time to decrease the sliding window -> contract from first end. 


vector<int> Solution::maxone(vector<int> &A, int B) {
    int n = A.size(), i = 0, j = 0,ans =0, l = 0;
    while(j < n){
        B -= (A[j] == 0);
        while(B < 0){
            B += (A[i] == 0);
            i++;
        }   
        if(ans < j -i + 1){
            ans = j - i +1;
            l = i;
        }
        j++;
    }
    vector<int> res;
    for(int i= l; i <l + ans; i++){
        res.push_back(i);
    }
    return res;
}
